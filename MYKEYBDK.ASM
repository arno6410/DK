; -------------------------------------------------------------------
; 80386
; 32-bit x86 assembly language
; TASM
;
; author:	David Blinder
; date:		1/12/2017
; program:	Keyboard example
; -------------------------------------------------------------------

IDEAL
P386
MODEL FLAT, C
ASSUME cs:_TEXT,ds:FLAT,es:FLAT,fs:FLAT,gs:FLAT

INCLUDE "keyb.inc"

; compile-time constants (with macros)
VMEMADR EQU 0A0000h	; video memory address
SCRWIDTH EQU 320	; screen witdth
SCRHEIGHT EQU 200	; screen height

KEYBHEIGHT EQU 72	; keyboard height in pixels
KMEM EQU VMEMADR + SCRWIDTH*(SCRHEIGHT-KEYBHEIGHT)/2 ; keyboard video memory start address
KEYCNT EQU 89		; number of keys to track

; -------------------------------------------------------------------
CODESEG

; Set the video mode
PROC setVideoMode
	ARG 	@@VM:byte
	USES 	eax

	movzx ax,[@@VM]
	int 10h

	ret
ENDP setVideoMode

; Terminate the program.
PROC terminateProcess
	USES eax
	call setVideoMode, 03h
	mov	ax,04C00h
	int 21h
	ret
ENDP terminateProcess

; -------------------------------------------------------------------

; draw active keyboard keys
PROC drawMario
	USES eax, ebx, ecx, edi	
	mov ecx, KEYCNT	; amount of keys to process
	
@@loopkeys:
	movzx edi, [word ptr offset keybpixels + 2*ecx - 2]	; relative target key pixel offset	
	add edi, KMEM	; video memory pixel address

; ; if key is on, draw red 2x2 square, otherwise draw black square
	; movzx ebx, [byte ptr offset keybscancodes + ecx - 1]	; get scancode
	; mov bl, [offset __keyb_keyboardState + ebx]	; obtain corresponding key state
	; xor ax, ax
	; sub ax, bx	; if key is pressed, AX = FFFF, otherwise AX = 0000
	
	; and ax, 0202h 			; two red pixels
	; mov [edi], ax			; top two pixels
	; mov [edi+SCRWIDTH], ax	; bottom two pixels
	
	call fillRect, 30, 150, 20, 30, 33h
	
	loop @@loopkeys
	
	ret
ENDP drawMario


PROC main
	sti
	cld
	
	push ds
	pop	es

	call	setVideoMode,13h
	call	updateColourPalette, 3
	; call	drawKeyboard
	
	call __keyb_installKeyboardHandler
		
@@done:
	call drawMario
	mov     al, [__keyb_rawScanCode] ; last pressed key
	cmp     al, 01h
	jne      @@done ; check if ESC is pressed, otherwise keep looping
	

	call __keyb_uninstallKeyboardHandler
	call	terminateProcess
ENDP main

; -------------------------------------------------------------------
DATASEG
	palette		db 0, 0, 0
				db 255, 255, 255
				db 255, 0, 0

; Note: the data declarations below are for illustration purposes only.
;		For your project, preferably read large data structures from a (binary) file.				
				
; red square locations				
	keybpixels 	dw 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2750, 2775, 2788, 2801, 2824, 2837, 2850, 2863
				dw 6739, 6755, 6768, 6781, 6794, 6807, 6820, 6833, 6846, 6859, 6872, 6885, 6898, 6935, 6948, 6961, 6984, 6997, 7010, 8513, 8943
				dw 10901, 10918, 10931, 10944, 10957, 10970, 10983, 10996, 11009, 11022, 11035, 11048, 11061, 11144, 11157, 11170
				dw 15059, 15074, 15087, 15100, 15113, 15126, 15139, 15152, 15165, 15178, 15191, 15204, 15225, 15269, 15304, 15317, 15330
				dw 17263, 19221, 19238, 19253, 19301, 19348, 19364, 19377, 19392, 19416, 19429, 19442, 19470, 19490

; scancode values				
	keybscancodes 	db 29h, 02h, 03h, 04h, 05h, 06h, 07h, 08h, 09h, 0Ah, 0Bh, 0Ch, 0Dh, 0Eh, 	52h, 47h, 49h, 	45h, 35h, 00h, 4Ah
					db 0Fh, 10h, 11h, 12h, 13h, 14h, 15h, 16h, 17h, 18h, 19h, 1Ah, 1Bh, 		53h, 4Fh, 51h, 	47h, 48h, 49h, 		1Ch, 4Eh
					db 3Ah, 1Eh, 1Fh, 20h, 21h, 22h, 23h, 24h, 25h, 26h, 27h, 28h, 2Bh,    						4Bh, 4Ch, 4Dh
					db 2Ah, 00h, 2Ch, 2Dh, 2Eh, 2Fh, 30h, 31h, 32h, 33h, 34h, 35h, 36h,  			 48h, 		4Fh, 50h, 51h,  1Ch
					db 1Dh, 0h, 38h,  				39h,  				0h, 0h, 0h, 1Dh,  		4Bh, 50h, 4Dh,  52h, 53h

; binary keyboard sprite
	keybdrawing dd 0FFFFF000h, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh
				dd 0FFFFFFFFh, 0003FFFFFh, 000000800h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000400000h, 000000400h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000800000h, 0FC7FE400h, 03FF1FF8Fh
				dd 0F8FFC7FEh, 07FE3FF1Fh, 0F1FF8FFCh, 0FFC7FE3Fh, 01FF800FFh, 0007FE3FFh, 0C7FE3FF0h, 0009FF8FFh
				dd 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h, 0A0040100h, 000801400h
				dd 028014008h, 000A00500h, 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 002801400h, 0400A0050h, 005002801h, 0801400A0h
				dd 00A005002h, 000280140h, 0A0040100h, 000801400h, 028014008h, 000A00500h, 002801400h, 0400A0050h
				dd 005002801h, 0801400A0h, 00A005002h, 000280140h, 0A0040100h, 000801400h, 028014008h, 000A00500h
				dd 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h, 0A0040100h, 000801400h
				dd 028014008h, 000A00500h, 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 002801400h, 0400A0050h, 005002801h, 0801400A0h
				dd 00A005002h, 000280140h, 0A0040100h, 000801400h, 028014008h, 000A00500h, 002801400h, 0400A0050h
				dd 005002801h, 0801400A0h, 00A005002h, 000280140h, 0A0040100h, 000801400h, 028014008h, 000A00500h
				dd 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h, 0A0040100h, 000801400h
				dd 028014008h, 000A00500h, 002801400h, 0400A0050h, 005002801h, 0801400A0h, 00A005002h, 000280140h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 0FC7FE400h, 03FF1FF8Fh, 0F8FFC7FEh, 07FE3FF1Fh
				dd 0F1FF8FFCh, 0FFC7FE3Fh, 01FF800FFh, 0007FE3FFh, 0C7FE3FF0h, 0009FF8FFh, 000000400h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000800000h
				dd 08FFFE400h, 0FE3FF1FFh, 01FF8FFC7h, 0FC7FE3FFh, 03FF1FF8Fh, 0F8FFC7FEh, 01FF800FFh, 0007FE3FFh
				dd 0C7FE3FF0h, 0009FF8FFh, 050001400h, 001400A00h, 0A0050028h, 002801400h, 0400A0050h, 005002801h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 050001400h, 001400A00h, 0A0050028h, 002801400h
				dd 0400A0050h, 005002801h, 0A0040100h, 000801400h, 028014008h, 000A00500h, 050001400h, 001400A00h
				dd 0A0050028h, 002801400h, 0400A0050h, 005002801h, 0A0040100h, 000801400h, 028014008h, 000A00500h
				dd 050001400h, 001400A00h, 0A0050028h, 002801400h, 0400A0050h, 005002801h, 0A0040100h, 000801400h
				dd 028014008h, 000A00500h, 050001400h, 001400A00h, 0A0050028h, 002801400h, 0400A0050h, 005002801h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 050001400h, 001400A00h, 0A0050028h, 002801400h
				dd 0400A0050h, 005002801h, 0A0040100h, 000801400h, 028014008h, 000A00500h, 050001400h, 001400A00h
				dd 0A0050028h, 002801400h, 0400A0050h, 005002801h, 0A0040100h, 000801400h, 028014008h, 000A00500h
				dd 050001400h, 001400A00h, 0A0050028h, 002801400h, 0400A0050h, 005002801h, 0A0040100h, 000801400h
				dd 028014008h, 000A00500h, 050001400h, 001400A00h, 0A0050028h, 002801400h, 0400A0050h, 005002801h
				dd 0A0040100h, 000801400h, 028014008h, 000A00500h, 050001400h, 001400A00h, 0A0050028h, 002801400h
				dd 0400A0050h, 005002801h, 0A0040100h, 000801400h, 028014008h, 000A00500h, 08FFFE400h, 0FE3FF1FFh
				dd 01FF8FFC7h, 0FC7FE3FFh, 03FF1FF8Fh, 004FFC7FEh, 01FF80100h, 0007FE3FFh, 0C7FE3FF0h, 000A004FFh
				dd 000000400h, 000000000h, 000000000h, 000000000h, 000000000h, 038000000h, 000000100h, 000000000h
				dd 000000000h, 000A00400h, 07FFFE400h, 0F1FF8FFCh, 0FFC7FE3Fh, 0E3FF1FF8h, 0FF8FFC7Fh, 027FE3FF1h
				dd 000000100h, 000000000h, 0C7FE3FF0h, 000A004FFh, 080001400h, 00A005002h, 000280140h, 01400A005h
				dd 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h, 080001400h, 00A005002h
				dd 000280140h, 01400A005h, 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h
				dd 080001400h, 00A005002h, 000280140h, 01400A005h, 000500280h, 02801400Ah, 000000100h, 000000000h
				dd 028014008h, 000A00500h, 080001400h, 00A005002h, 000280140h, 01400A005h, 000500280h, 02801400Ah
				dd 000000100h, 000000000h, 028014008h, 000A00500h, 080001400h, 00A005002h, 000280140h, 01400A005h
				dd 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h, 080001400h, 00A005002h
				dd 000280140h, 01400A005h, 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h
				dd 080001400h, 00A005002h, 000280140h, 01400A005h, 000500280h, 02801400Ah, 000000100h, 000000000h
				dd 028014008h, 000A00500h, 080001400h, 00A005002h, 000280140h, 01400A005h, 000500280h, 02801400Ah
				dd 000000100h, 000000000h, 028014008h, 000A00500h, 080001400h, 00A005002h, 000280140h, 01400A005h
				dd 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h, 080001400h, 00A005002h
				dd 000280140h, 01400A005h, 000500280h, 02801400Ah, 000000100h, 000000000h, 028014008h, 000A00500h
				dd 07FFFE400h, 0F1FF8FFCh, 0FFC7FE3Fh, 0E3FF1FF8h, 0FF8FFC7Fh, 0C7FE3FF1h, 0000001FFh, 000000000h
				dd 0C7FE3FF0h, 0009FF8FFh, 000000400h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000800000h, 0C7FFE400h, 0FF1FF8FFh, 08FFC7FE3h, 0FE3FF1FFh
				dd 01FF8FFC7h, 0FFFFE3FFh, 0000000FFh, 0000007FEh, 0C7FE3FF0h, 0009FF8FFh, 028001400h, 000A00500h
				dd 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h, 028014008h, 000A00500h
				dd 028001400h, 000A00500h, 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h
				dd 028014008h, 000A00500h, 028001400h, 000A00500h, 050028014h, 001400A00h, 0A0050028h, 000001400h
				dd 000000100h, 000000801h, 028014008h, 000A00500h, 028001400h, 000A00500h, 050028014h, 001400A00h
				dd 0A0050028h, 000001400h, 000000100h, 000000801h, 028014008h, 000A00500h, 028001400h, 000A00500h
				dd 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h, 028014008h, 000A00500h
				dd 028001400h, 000A00500h, 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h
				dd 028014008h, 000A00500h, 028001400h, 000A00500h, 050028014h, 001400A00h, 0A0050028h, 000001400h
				dd 000000100h, 000000801h, 028014008h, 000A00500h, 028001400h, 000A00500h, 050028014h, 001400A00h
				dd 0A0050028h, 000001400h, 000000100h, 000000801h, 028014008h, 000A00500h, 028001400h, 000A00500h
				dd 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h, 028014008h, 000A00500h
				dd 028001400h, 000A00500h, 050028014h, 001400A00h, 0A0050028h, 000001400h, 000000100h, 000000801h
				dd 028014008h, 000A00500h, 0C7FFE400h, 0FF1FF8FFh, 08FFC7FE3h, 0FE3FF1FFh, 01FF8FFC7h, 0FFFFE3FFh
				dd 0000000FFh, 0000007FEh, 0C7FE3FF0h, 000A004FFh, 000000400h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000A00400h, 07FFFE400h, 03FFF8FFCh
				dd 0FFFFFFFCh, 0FFFFFFFFh, 01FFFC3FFh, 0FC7FE3FFh, 03FF000FFh, 000FFC7FEh, 0C7FFFFF0h, 000A004FFh
				dd 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h, 040080100h, 001002801h
				dd 028000008h, 000A00500h, 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h
				dd 040080100h, 001002801h, 028000008h, 000A00500h, 080001400h, 040005002h, 000000002h, 000000000h
				dd 0A0002400h, 002801400h, 040080100h, 001002801h, 028000008h, 000A00500h, 080001400h, 040005002h
				dd 000000002h, 000000000h, 0A0002400h, 002801400h, 040080100h, 001002801h, 028000008h, 000A00500h
				dd 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h, 040080100h, 001002801h
				dd 028000008h, 000A00500h, 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h
				dd 040080100h, 001002801h, 028000008h, 000A00500h, 080001400h, 040005002h, 000000002h, 000000000h
				dd 0A0002400h, 002801400h, 040080100h, 001002801h, 028000008h, 000A00500h, 080001400h, 040005002h
				dd 000000002h, 000000000h, 0A0002400h, 002801400h, 040080100h, 001002801h, 028000008h, 000A00500h
				dd 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h, 040080100h, 001002801h
				dd 028000008h, 000A00500h, 080001400h, 040005002h, 000000002h, 000000000h, 0A0002400h, 002801400h
				dd 040080100h, 001002801h, 028000008h, 000A00500h, 07FFFE400h, 03FFF8FFCh, 0FFFFFFFCh, 0FFFFFFFFh
				dd 01FFFC3FFh, 0FC7FE3FFh, 03FF000FFh, 000FFC7FEh, 0C7FFFFF0h, 0009FF8FFh, 000000400h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000800000h
				dd 000000400h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000800000h, 000000400h, 000000000h, 000000000h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000800000h, 000000800h, 000000000h, 000000000h, 000000000h
				dd 000000000h, 000000000h, 000000000h, 000000000h, 000000000h, 000400000h, 0FFFFF000h, 0FFFFFFFFh
				dd 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 0003FFFFFh
; -------------------------------------------------------------------
; STACK
; -------------------------------------------------------------------
STACK 100h

END main
